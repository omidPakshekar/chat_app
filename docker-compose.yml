version: "3.3"


services:
  db: 
    image: postgres
    volumes: 
    - ./data/db:/var/lib/postgresql/data 
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres14641
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      - back
  nginx:
    build: ./nginx
    image: "nginx:latest"
    # volumes:
    #   - /static:/static
    networks:
      - front
      - back
    ports:
      - "8001:80"
    depends_on:
      - daphne
      - web
    links:
      - daphne
      - web
    # volumes:
    #   - type: 'bind'
    #     source: './media'
    #     target: '/django_jobfinder_socialnetwrok/media'
      
    #   - type: 'bind'
    #     source: './static'
    #     target: '/django_jobfinder_socialnetwrok/static'
  
  redis:
    image: redis:alpine
    networks:
      - back
    ports:
      - "6379:6379"
    container_name: redis

  daphne:
    restart: always
    build: ./app
    image: "channel_prod:latest"
    working_dir: /app/
    command: bash -c " daphne -b 0.0.0.0 -p 9542 core.asgi:application"
    volumes:
      -  ./app:/app
    ports:
      - "9542:9542"
    env_file:
      - ./app/app_env
    networks:
      - front
      - back
    depends_on:
      - redis
      - db 
    links:
      - redis
      - db
  worker:
    build: ./app
    image: "channel_prod:latest"
    working_dir: /app/
    command: bash -c "python manage.py runworker channel_layer"
    volumes:
      -  ./app:/app
    env_file:
      - ./app/app_env
    networks:
      - front
      - back
    depends_on:
      - redis
      - db
    links:
      - redis
      - db
  web:
    build: ./app
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./app:/app
      - ./static:/app/static
    ports:
      - "8000:8000"
    expose:
      - "8000"
    networks:
      - back
      - front
    depends_on:
      - redis
      - db
    links:
      - redis
      - db
  # Celery
  # celery:
  #   restart: always
  #   build: ./django_jobfinder_socialnetwrok
  #   volumes:
  #     - ./django_jobfinder_socialnetwrok:/django_jobfinder_socialnetwrok
  #   command: celery -A core worker -l DEBUG

  #   container_name: celery
  #   networks:
  #     - back
  #   depends_on:
  #     - redis
  #     - web
  #   links:
  #     - redis
  #     - web


volumes:
  static:

networks:
  front:
  back:
